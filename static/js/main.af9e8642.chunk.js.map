{"version":3,"sources":["me_scorpion.jpeg","resume.pdf","me.jpg","AboutMe.jsx","App.jsx","Home.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AboutMe","react_default","a","createElement","Wrapper","About","Title","Text","ExternalLink","href","Resume","SocialMedia","Navigation","Links","to","ImageWrapper","Image","src","AboutMePicture","ImageSubtitle","Component","styled","Flex","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","Link","_templateObject8","_templateObject9","_templateObject10","_templateObject11","App","App_Wrapper","App_About","App_Title","Lines","App_ExternalLink","App_Links","App_Image","me","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","Home","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,i1FCSnBC,mLAEjB,OACEC,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAD,2BAGAL,EAAAC,EAAAC,cAACI,EAAD,mDAEWN,EAAAC,EAAAC,cAACK,EAAD,CAAcC,KAAK,2DAAnB,oBAFX,OAGMR,EAAAC,EAAAC,cAACK,EAAD,CAAcC,KAAK,oCAAnB,qBAHN,KAKAR,EAAAC,EAAAC,cAACI,EAAD,mMAIAN,EAAAC,EAAAC,cAACI,EAAD,wFAEKN,EAAAC,EAAAC,cAACK,EAAD,CAAcC,KAAK,6BAAnB,gBAFL,qJAOAR,EAAAC,EAAAC,cAACI,EAAD,kBACYN,EAAAC,EAAAC,cAACK,EAAD,CAAcC,KAAMC,KAApB,UADZ,gDAGAT,EAAAC,EAAAC,cAAA,iBAEAF,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAD,CAAcC,KAAK,+CAAnB,aAEFR,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAD,CAAcC,KAAK,qCAAnB,WAEFR,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAD,CAAcC,KAAK,oCAAnB,aAIJR,EAAAC,EAAAC,cAACS,EAAD,KACEX,EAAAC,EAAAC,cAACU,EAAD,CAAOC,GAAG,IAAV,cAIJb,EAAAC,EAAAC,cAACY,EAAD,KACEd,EAAAC,EAAAC,cAACa,EAAD,CAAOC,IAAKC,MACZjB,EAAAC,EAAAC,cAACgB,EAAD,uEAhD2BC,aAuD/BT,EAAcU,kBAAOC,OAAPD,CAAHE,KAMXR,EAAeM,kBAAOC,OAAPD,CAAHG,KAKZL,EAAgBE,kBAAOC,OAAPD,CAAHI,KAKbb,EAAaS,kBAAOC,OAAPD,CAAHK,KAUVtB,EAAUiB,kBAAOC,OAAPD,CAAHM,KAoBPrB,EAAQe,kBAAOC,OAAPD,CAAHO,KAOLvB,EAAQgB,kBAAOC,OAAPD,CAAHQ,KA8BLhB,EAAQQ,kBAAOS,IAAPT,CAAHU,KAMLvB,EAAea,kBAAO,IAAPA,CAAHW,KAMZzB,EAAOc,kBAAO,IAAPA,CAAHY,KAUJjB,EAAQK,kBAAO,MAAPA,CAAHa,urCCnKLC,oLAEF,OACElC,EAAAC,EAAAC,cAACiC,GAAD,KACEnC,EAAAC,EAAAC,cAACkC,GAAD,KACEpC,EAAAC,EAAAC,cAACmC,GAAD,uBAGArC,EAAAC,EAAAC,cAACoC,GAAD,iBAAgBtC,EAAAC,EAAAC,cAACqC,GAAD,CAAc/B,KAAK,qCAAnB,QAAhB,KACAR,EAAAC,EAAAC,cAACoC,GAAD,gBAAetC,EAAAC,EAAAC,cAACsC,GAAD,CAAO3B,GAAG,IAAV,UAAf,KACAb,EAAAC,EAAAC,cAACoC,GAAD,uCAAsCtC,EAAAC,EAAAC,cAACsC,GAAD,CAAO3B,GAAG,WAAV,QAAtC,KACAb,EAAAC,EAAAC,cAAA,kBAEFF,EAAAC,EAAAC,cAACuC,GAAD,CAAOzB,IAAK0B,cAbFvB,aAmBZhB,GAAUiB,kBAAOC,OAAPD,CAAHuB,KAUP5B,GAAQK,kBAAO,MAAPA,CAAHwB,KAKLN,GAAQlB,kBAAO,IAAPA,CAAHyB,KASLjC,GAAQQ,kBAAOS,IAAPT,CAAH0B,KAMLvC,GAAea,kBAAO,IAAPA,CAAH2B,KAMZ1C,GAAQe,kBAAOC,OAAPD,CAAH4B,KAOL5C,GAAQgB,kBAAOC,OAAPD,CAAH6B,KAUIf,MC3DAgB,oLAXX,OACElD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACEnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWxD,IACxCC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrB,cANxBf,aCMCqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,GAAD,MAAUC,SAASC,eAAe,SD2H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.af9e8642.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me_scorpion.e96405d3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/resume.9aa2ade9.pdf\";","module.exports = __webpack_public_path__ + \"static/media/me.88f76854.jpg\";","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport AboutMePicture from './me_scorpion.jpeg';\nimport Resume from './resume.pdf';\nimport { Flex } from '@rebass/grid';\nimport {Link} from \"react-router-dom\";\n\n\nexport default class AboutMe extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <About>\n          <Title>\n            A little about me:\n          </Title>\n          <Text>\n            I am a third year at UC Berkeley,\n            studying <ExternalLink href=\"https://eecs.berkeley.edu/academics/undergraduate/cs-ba\">computer science</ExternalLink>\n            and <ExternalLink href=\"https://cogsci.berkeley.edu/home\">cognitive science</ExternalLink>.\n          </Text>\n          <Text>\n            While my career end-game isn't defined, I am insatiable for knowledge and new experiences.\n            I am particularly interested in applied computer science techniques and full stack development.\n          </Text>\n          <Text>\n            As an aspiring software engineer with a humanities background, having worked\n            at <ExternalLink href=\"https://earthjustice.org/\">Earthjustice</ExternalLink>,\n            an international law firm, and in the California State Senate,\n            I am always looking for ways to incorporate tech to positively impact the world.\n          </Text>\n\n          <Text>\n            Here's my <ExternalLink href={Resume}>resume</ExternalLink> for more information on my work experience.\n          </Text>\n          <p>&nbsp;</p>\n\n          <SocialMedia>\n            <Text>\n              <ExternalLink href=\"https://www.linkedin.com/in/ayesha-omarali/\">LinkedIn</ExternalLink>\n            </Text>\n            <Text>\n              <ExternalLink href=\"https://github.com/ayesha-omarali\">GitHub</ExternalLink>\n            </Text>\n            <Text>\n              <ExternalLink href=\"https://twitter.com/ayeshazarah_\">Twitter</ExternalLink>\n            </Text>\n          </SocialMedia>\n\n          <Navigation>\n            <Links to=''>homepage</Links>\n          </Navigation>\n\n        </About>\n        <ImageWrapper>\n          <Image src={AboutMePicture} />\n          <ImageSubtitle>Eating a scorpion & 7/11 toastie in Bangkok, Thailand</ImageSubtitle>\n        </ImageWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nconst SocialMedia = styled(Flex)`\n  display: flex;\n  algin-items: center;\n  justify-content: space-between;\n`;\n\nconst ImageWrapper = styled(Flex)`\n  padding-top: 15px;\n  flex-direction: column;\n`;\n\nconst ImageSubtitle = styled(Flex)`\n  color: #dfdfdf;\n  font-size: 0.85em;\n`;\n\nconst Navigation = styled(Flex)`\n  // padding-top: -20px;\n  margin: 0 0 5px 0;\n  display: block\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n`;\n\nconst Wrapper = styled(Flex)`\n  padding-top: 150px;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: wrap;\n  font-family: merriweather, serif;\n  @media only screen and (max-width 400px){\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    flex-wrap: wrap;\n    font-family: merriweather, serif;\n  }\n  \n  ::selection {\n    #00d7f1\n  }\n`;\n\nconst Title = styled(Flex)`\n  color: #dfdfdf;\n  display: block;\n  font-size: 2em;\n  font-weight: bold;\n`;\n\nconst About = styled(Flex)`\n  width: 30%;\n  padding-top: 50px;\n  flex-direction: column;\n  font-family: merriweather, serif;\n  font-weight: 300;\n  font-size: 16px;\n  padding-right: 40px;\n  padding-left: 40px;\n  @media only screen and (max-width: 1000px) {\n    width: 50%;\n    padding-top: 50px;\n    flex-direction: column;\n    font-family: merriweather, serif;\n    font-weight: 300;\n    font-size: 16px;\n    padding-right: 40px;\n    padding-left: 40px;\n  }\n  @media only screen and (max-width: 400px) {\n    width: 100%;\n    flex-direction: column;\n    font-family: merriweather, serif;\n    font-weight: 300;\n    font-size: 16px;\n    padding-right: 40px;\n    padding-left: 40px;\n  }\n`;\n\nconst Links = styled(Link)`\n  background-color: #fd664b;\n  padding: 2px 4px;\n  color: white;\n`;\n\nconst ExternalLink = styled('a')`\n  background-color: #fd664b;\n  padding: 2px 4px;\n  color: white;\n`;\n\nconst Text = styled('p')`\n  margin: 0 0 5px 0;\n  // display: block\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n`;\n\n\nconst Image = styled('img')`\n  height: 400px;\n  padding-right: 40px;\n`;","import React, { Component } from 'react';\nimport me from './me.jpg';\nimport styled from 'styled-components';\nimport { Flex } from '@rebass/grid';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <About>\n          <Title>\n            Hi, I'm Ayesha\n          </Title>\n          <Lines>I'm into <ExternalLink href=\"https://github.com/ayesha-omarali\">code</ExternalLink>,</Lines>\n          <Lines>love to <Links to=\"\">travel</Links>,</Lines>\n          <Lines>and you can find more about me <Links to='aboutme'>here</Links>.</Lines>\n          <p>&nbsp;</p>\n        </About>\n        <Image src={me} />\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled(Flex)`\n  padding-top: 300px;\n  justify-content: center;\n  flex-direction: row;\n  font-family: merriweather, serif;\n  ::selection {\n    #00d7f1\n  }\n`;\n\nconst Image = styled('img')`\n  height: 300px\n`;\n\n\nconst Lines = styled('p')`\n  margin: 0 0 5px 0;\n  display: block\n  margin-block-start: 1em;\n  margin-block-end: 1em;\n  margin-inline-start: 0px;\n  margin-inline-end: 0px;\n`;\n\nconst Links = styled(Link)`\n  background-color: #fd664b;\n  padding: 2px 4px;\n  color: white;\n`;\n\nconst ExternalLink = styled('a')`\n  background-color: #fd664b;\n  padding: 2px 4px;\n  color: white;\n`;\n\nconst Title = styled(Flex)`\n  color: #dfdfdf;\n  display: block;\n  font-size: 2em;\n  font-weight: bold;\n`;\n\nconst About = styled(Flex)`\n  padding-top: 50px;\n  flex-direction: column;\n  font-family: merriweather, serif;\n  font-weight: 300;\n  font-size: 16px;\n  padding-right: 40px;\n  \n`;\n\nexport default App;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport AboutMe from \"./AboutMe\";\nimport App from './App.jsx';\n\n\nclass Home extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path='/aboutme' component={AboutMe}/>\n          <Route exact path='/' component={App}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}